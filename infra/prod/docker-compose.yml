version: '3.9'
name: 'stethoscope_prod'

services:
  redis:
    image: redis:7-alpine
    command: redis-server
    expose:
      - "6379"
    volumes:
      - redis_value:/data

  postgres:
    image: postgres:14
    volumes:
      - postgres_value:/var/lib/postgresql/data
      - ./postgres_dump:/usr/share/postgresql/dump/
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready --username ${POSTGRES_USER} --dbname ${POSTGRES_DB}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    expose:
      - "5432"

  frontend:
    image: gritsenkoserge/stethoscope-frontend:latest
    volumes:
      - frontend_build_value:/app/build_upload
    command: "/bin/sh -c 'cp -r /app/build/* /app/build_upload; while :; do sleep 1h; done'"

  backend:
    image: gritsenkoserge/stethoscope-backend:latest
    volumes:
      - static_value:/app/staticfiles/
      - media_value:/app/media/
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env

  mailhog:
    image: mailhog/mailhog
    env_file:
      - ./.env
    environment:
      MH_SMTP_BIND_ADDR: "0.0.0.0:1025"
      MH_UI_BIND_ADDR: "0.0.0.0:8025"
      MH_STORAGE: "maildir"
    volumes:
      - ./maildir:/maildir
    expose:
      - "1025"
      - "8025"

  nginx:
    image: nginx:1.23.4
    ports:
      - "80:80"
      - "443:443"
      - "8025:8025"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/nginx/configs:/etc/nginx/conf.d:ro
      - ./data/nginx/ssl:/etc/nginx/ssl:ro
      - frontend_build_value:/usr/share/nginx/html:ro
      - static_value:/home/src/app/static:ro
      - media_value:/home/src/app/media:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_value:
  media_value:
  postgres_value:
  frontend_build_value:
  redis_value:
